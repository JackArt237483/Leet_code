// Задача на подсчет звезлдочек в строке то есть у тебя
// не понятная строка и тебе нужно посчитать сколько звездочек не содержится
// в этих парах

// 1) Вариатнт решения через поиск и цикл
const str = "l |*e *et |c ** o |* de|"

function getRightStar(str) {

  let startCount = 0
  let switchStart = false

  for(let i = 0; i < str.length;i++) {
    if(str[i] === "|") {
      if(switchStart){
        switchStart = false
      } else {
        switchStart = true
      }
    } else if (str[i] === "*") {
       if(!switchStart){
        startCount ++
       }
    }
  }
  return startCount
}


console.log(getRightStar(str))
/*
 1___Ну смотри у тебя есть функция и в качестве агрумента
 в этой функции есть строка
 2___*тут у нас идут две переменные одна отвечает за счетчик
 то есть количесто * вне пар
  let startCount = 0
  а вторая переменная будет отвечаить за переключением состояния
  то есть когда мы находимся вне пары у нас будет состояние false
  а когда в паре true
  let swithStatw = false
 _____и когда у тебя состояние будет переключаться на false
 у тебя будет происходить счетчик звездочек
 3___  for(let i = 0; i < str.length;i++) {
  } здесь у тебя цикл for будет просто проходить
  по строке и записвать и искать звездочки вне паре
 4___if(str[i] === "|") {
      if(switchStart){
        switchStart = false
      } else {
        switchStart = true
      }
    } в этом коде мы проверяем совпадает или мы или цикл встертил
    вот знак вертикальной черты |
    if(switchStart){
        switchStart = false
      } else {
        switchStart = true
      }и тут у нас идет проверка если мы астретили вот этот знак
      | то есть наше состояние false и оно меняется на true
      и наоборот у нас оно опять у нас меняется когда мы его во время
      цикла опять встретили на false потому что цикл опять вышел из
    пары.Котроче этот код у теья просто будет менять состояние на
    true and false в зависимости от вхождения и выхождения строки
 5___else if (str[i] === "*") {
       if(!switchStart){
        startCount ++
       }
    } И смотри вот эат часьь когда выполняется только тогда когда
    мы во время цикла нашли * вне пары у нас состояние будетт меняться
    if(!switchStart){ на false
        startCount ++ и делать одну запись в startPlus
    }
  6___если мы завершили  и все цикл у нас все завершил и прошелся по
  строке но мы return  let startCount = 0 вот эту переменнуб с количесом резултата
*/


// 2 вариант решения который у нас короче

const s = "l |* e * et|c ** o |* de| *"

const res = s.split("|")
console.log(res)

function newTaskSecond (s) {
  const matchs = s.split("|")
  let startCount = 0

  for(let i = 0;i < matchs.length; i++){
    startCount += (matchs[i].match(/\*/g) || []).length
  }

  return startCount
}

console.log(newTaskSecond(s))


/*
1)Здесь ты просто создаешт функции и туда передаеь аргумент
2)Во втроом решении ты за место того чтобы писать там состояние которое
которое у тебя будет менять состояение true на false
 const matchs = s.split("|")
 ты сразу при помощи split превращаешь строку в массив удаляя все ненужное
 // я про вот этот символ |
 const startCount = 0 здесь у тебя просто есть переменная которая
 будет содераджать все звездочки которое нк находятся в паре
3 for(let i = 0;i < matchs.length; i++){
    короче тут ты просто пробегаешься по массиву пордстрок  и
    startCount += (matchs[i].match(/*\g) || []).length
    и во время цикла цикл на каждой по строке будет проверять
    если ли в этой строке * вот этот строка  /*\g глобально
    то есть во всей строке  если нет то просто возращает пустой
    массив .length и юзаешь вот это свойсво чтобы узнать сколько
    * у тебя есть в массиве
*/