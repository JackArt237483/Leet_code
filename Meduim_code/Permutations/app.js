// задача по названием Permutations-Перестановки
// вкратце у тебя есть массив целых чисел и тебе нужно вернуть все возможные перестановки

function permute(nums) {
  const result = [];

  function backtrack(start) {
      if (start === nums.length) {
          result.push([...nums]);
          return;
      }

      for (let i = start; i < nums.length; i++) {
          [nums[start], nums[i]] = [nums[i], nums[start]];
          backtrack(start + 1);
          [nums[start], nums[i]] = [nums[i], nums[start]];
         }
  }

  backtrack(0);
  return result;
}

const nums = [1, 2, 3, 4, 6];
const permutations = permute(nums);
console.log(permutations);

/*
  1)__Самое обычное и самое банальное
  у тебя есть функция коорая принмает
  массив в качесте аргумента
  2)Потом ты создаешь пустой массив
   const result = [] и туда у тебя будут
   записываться результаты
  3) function backtrack(start) {
  }потом ты обьевляешь еще одну функцию
  где у теюя буудут искаться все возможные перестановки
  start принимает один аргумент который указыает
  на текущий элемент в массиве
  4) if(start === nums.length){
    } здесь у тебя просто проверяется длина текущего индекса
    и длина массива потому что start это текущий элмент в массиве
    _____вкратце эта пароверка дает понять коду что все возможные
    элементы в массиве перебрались и так до бескрнечности пока все
    варианты не переберутся
  5)result.push([...nums])
    return и вот такой записью ты говоришь когда вариант перестановки найден
    просто добавь эту перестановку в массив result
    [...nums] а вот запись создай мне копию массива nums
  6)  for(let i = start; i < nums.length;i++){
      здесь у тебя просто for будет проходиться по длине массива
      start у тебя в данном моменте будет просто 0 и затем будет
      увеличиваться 0 1 2
    }
  7) [nums[start], nums[i]] = [nums[i], nums[start]];
          backtrack(start + 1);
          [nums[start], nums[i]] = [nums[i], nums[start]];
    в  этом коде когда for проходит в массиву он при помощи вот таких записей
    проходит и говорит я найду все возможные перестановки и будут их записавать
  8) backtrack(0);
  return result; потом мы здесь уже в конце вызывает функцию и передаем аргумент 0
  то есть говорим чтобы после каждой итерации прохождению по массиву все начиналось
  с первого элемента массива

  и когда все возможные варианты найдены ты возращает уже готовый массив result
*/